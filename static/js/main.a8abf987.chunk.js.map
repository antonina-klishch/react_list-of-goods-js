{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_ALPHABETICALLY","SORT_BY_LENGTH","App","useState","sortField","setSortField","reverseField","setReverseField","visibleGoods","goods","sortMethod","reverse","prepsredGoods","sort","good1","good2","localeCompare","length","getPreparedGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAsB,sBACtBC,EAAiB,iBA2BhB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwCF,oBAAS,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACMC,EA5BR,SAA0BC,EAAOC,EAAYC,GAC3C,IAAMC,EAAa,YAAOH,GAqB1B,OAnBIC,GACFE,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQL,GACN,KAAMV,EACJ,OAAOc,EAAME,cAAcD,GAE7B,KAAMd,EACJ,OAAOa,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,EAEZ,IAGCN,GACFC,EAAcD,UAGTC,CACR,CAKsBM,CACnBnB,EAAiBK,EAAWE,GAQ9B,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,WAAYjB,IAAcJ,IAE5BsB,QAAS,kBAAMjB,EAAaL,EAAnB,EALX,iCAUA,wBACEoB,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,WAAYjB,IAAcH,IAE5BqB,QAAS,kBAAMjB,EAAaJ,EAAnB,EALX,4BAUA,wBACEmB,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,YAAaf,IAEfgB,QAAS,WACPf,GAAiBD,EAClB,EAPH,sBAYEF,GAAaE,IACb,wBACEc,KAAK,SACLD,UAAU,4BACVG,QA5CI,WACZjB,EAAa,IACbE,GAAgB,EACjB,EAsCO,sBAUJ,6BACIC,EAAae,KAAI,SAAAC,GAAI,OACrB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,EADH,QAQ9B,EC9GDC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,Q","file":"static/js/main.a8abf987.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\nimport { useState } from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_ALPHABETICALLY = 'Sort alphabetically';\nconst SORT_BY_LENGTH = 'Sort by length';\n\nfunction getPreparedGoods(goods, sortMethod, reverse) {\n  const prepsredGoods = [...goods];\n\n  if (sortMethod) {\n    prepsredGoods.sort((good1, good2) => {\n      switch (sortMethod) {\n        case (SORT_ALPHABETICALLY):\n          return good1.localeCompare(good2);\n\n        case (SORT_BY_LENGTH):\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverse) {\n    prepsredGoods.reverse();\n  }\n\n  return prepsredGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [reverseField, setReverseField] = useState(false);\n  const visibleGoods = getPreparedGoods(\n    goodsFromServer, sortField, reverseField,\n  );\n\n  const reset = () => {\n    setSortField('');\n    setReverseField(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': sortField !== SORT_ALPHABETICALLY,\n          })}\n          onClick={() => setSortField(SORT_ALPHABETICALLY)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': sortField !== SORT_BY_LENGTH,\n          })}\n          onClick={() => setSortField(SORT_BY_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', {\n            'is-light': !reverseField,\n          })}\n          onClick={() => {\n            setReverseField(!reverseField);\n          }}\n        >\n          Reverse\n        </button>\n\n        {(sortField || reverseField) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        { visibleGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}